{"version":3,"sources":["components/filter/Filter.module.css","components/App.module.css","components/contactForm/ContactForm.jsx","components/contactsList/Contact.jsx","redux/phonebook/contacts.actions.js","components/contactsList/ContactList.jsx","components/filter/Filter.jsx","components/App.jsx","redux/phonebook/contacts.reducers.js","redux/phonebook/rootReducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css","components/contactsList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shordid","generate","numberInputId","handleInput","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","styles","form","htmlFor","label","input","type","id","onChange","btn","Component","Contact","contact","onRemoveContact","item","data-id","onClick","addContact","createAction","payload","uuid","removeContact","filterContact","connect","contacts","allcContacts","filter","normalizedFilter","toLowerCase","includes","getFilteredContacts","list","map","event","App","createContact","container","mapDispatchToProps","createReducer","action","_","rootReducer","combineReducers","persistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,yB,0LC+DfC,E,4MA3DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,YAAc,SAAAC,GAAM,IAAD,EACOA,EAAEC,OAAlBR,EADS,EACTA,KAAMS,EADG,EACHA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAGpC,WAAU,IAAD,EACkBe,KAAKjB,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,uBAAMa,SAAUE,KAAKL,aAAcM,UAAWC,IAAOC,KAArD,UACE,wBAAOC,QAASJ,KAAKd,YAAae,UAAWC,IAAOG,MAApD,iBAEE,uBACEJ,UAAWC,IAAOI,MAClBC,KAAK,OACLvB,KAAK,OACLS,MAAOT,EACPwB,GAAIR,KAAKd,YACTuB,SAAUT,KAAKV,iBAGnB,wBAAOc,QAASJ,KAAKX,cAAeY,UAAWC,IAAOG,MAAtD,mBAEE,uBACEJ,UAAWC,IAAOI,MAClBC,KAAK,OACLvB,KAAK,SACLS,MAAOR,EACPuB,GAAIR,KAAKX,cACToB,SAAUT,KAAKV,iBAInB,wBAAQW,UAAWC,IAAOQ,IAAKH,KAAK,SAApC,gC,GApDkBI,a,gBCwBXC,EAxBC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC1B,OACE,oBAAGb,UAAWC,IAAOa,KAArB,UACGF,EAAQ7B,KADX,KACkB,+BAAO6B,EAAQ5B,SAC/B,wBACEgB,UAAWC,IAAOQ,IAClBM,UAASH,EAAQL,GACjBD,KAAK,SACLU,QAASH,EAJX,mB,sBCLAI,EAAaC,YAAa,eAAe,gBAAGnC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACpEmC,QAAS,CACPZ,GAAIa,cACJrC,OACAC,cAIEqC,EAAgBH,YAAa,kBAE7BI,EAAgBJ,YAAa,kBC8BpBK,eARS,SAACzC,GAGvB,MAAO,CACL0C,SAZwB,SAACC,EAAcC,GACzC,IAAMC,EAAmBD,EAAOE,cAEhC,OAAOH,EAAaC,QAAO,SAACd,GAAD,OACzBA,EAAQ7B,KAAK6C,cAAcC,SAASF,MAMbG,CADIhD,EAArB0C,SAAqB1C,EAAX4C,WAOoB,CAAEL,iBAA3BE,EApCK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUH,EAAoB,EAApBA,cAC/B,OACE,oBAAIrB,UAAWC,IAAO8B,KAAtB,SACGP,EAASQ,KAAI,SAACpB,GAAD,OACZ,oBAAIZ,UAAWC,IAAOa,KAAtB,SACE,cAAC,EAAD,CACEF,QAASA,EACTC,gBAAiB,kBAAMQ,EAAcT,EAAQL,QAHhBK,EAAQL,Y,iBCmBlCgB,eAJS,SAACzC,GAAD,MAAY,CAClCU,MAAOV,EAAM4C,UAGyB,CAAEJ,iBAA3BC,EAxBA,SAAC,GAA8B,IAA5B/B,EAA2B,EAA3BA,MAAO8B,EAAoB,EAApBA,cACvB,OACE,wBAAOtB,UAAWC,IAAOG,MAAzB,kCAEE,uBACEJ,UAAWC,IAAOI,MAClBC,KAAK,OACLvB,KAAK,SACLS,MAAOA,EACPgB,SAAU,SAACyB,GAAD,OAAWX,EAAcW,EAAM1C,OAAOC,gB,iBCPlD0C,E,4MACJC,cAAgB,YAAuB,IAApBpD,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAevB,EAAKY,MAAMqB,WAAW,CAAElC,OAAMC,Y,4CAkBhC,WACE,OACE,sBAAKgB,UAAWC,IAAOmC,UAAvB,UACE,2CACA,cAAC,EAAD,CAAavC,SAAUE,KAAKoC,gBAC5B,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEX,SAAUzB,KAAKH,MAAM4B,SACrBH,cAAetB,KAAKsB,uB,GA3CZX,aAsDZ2B,EAAqB,CAAEpB,aAAYI,iBAE1BE,eANS,SAACzC,GAAD,MAAY,CAClC0C,SAAU1C,KAK4BuD,EAAzBd,CAA6CW,G,+CC7DtDV,EAAWc,YAAc,IAAD,mBAC3BrB,GAAa,SAACnC,EAAOyD,GAAR,4BAAuBzD,GAAvB,CAA8ByD,EAAOpB,aADvB,cAE3BE,GAAgB,SAACvC,EAAOyD,GAAR,OACfzD,EAAM4C,QAAO,SAACd,GAAD,OAAaA,EAAQL,KAAOgC,EAAOpB,cAHtB,IAMxBO,EAASY,YAAc,GAAD,eACzBhB,GAAgB,SAACkB,EAAGD,GAAJ,OAAeA,EAAOpB,YCF1BsB,EALKC,YAAgB,CAClClB,WACAE,WCSIiB,EAAgB,CACpBC,IAAK,WACLC,aAGIC,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAmBC,YAAed,EAAeF,GAEjDiB,EAAQC,YAAe,CAC3BC,QAASJ,EACTV,eAKa,GAAEY,QAAOG,UAFNC,YAAaJ,IC1B/BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaQ,QAAS,KAAML,UAAWH,EAAMG,UAA7C,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,U,kBCf1BzF,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,kBCA/HD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,4B","file":"static/js/main.7584aec6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__23XmH\",\"input\":\"Filter_input__3K0YO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\"};","import React, { Component } from 'react';\nimport shordid from 'shortid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shordid.generate();\n  numberInputId = shordid.generate();\n\n  handleInput = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId} className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={this.nameInputId}\n            onChange={this.handleInput}\n          />\n        </label>\n        <label htmlFor={this.numberInputId} className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            id={this.numberInputId}\n            onChange={this.handleInput}\n          />\n        </label>\n\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst Contact = ({ contact, onRemoveContact }) => {\n  return (\n    <p className={styles.item}>\n      {contact.name}: <span>{contact.number}</span>\n      <button\n        className={styles.btn}\n        data-id={contact.id}\n        type=\"button\"\n        onClick={onRemoveContact}\n      >\n        X\n      </button>\n    </p>\n  );\n};\n\n// Contact.propTypes = {\n//   contact: PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     number: PropTypes.string.isRequired,\n//   }).isRequired,\n//   onRemoveContact: PropTypes.func.isRequired,\n// };\n\nexport default Contact;\n","import { v4 as uuid } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"ADD_CONTACT\", ({ name, number }) => ({\n  payload: {\n    id: uuid(),\n    name,\n    number,\n  },\n}));\n\nconst removeContact = createAction(\"REMOVE_CONTACT\");\n\nconst filterContact = createAction(\"FILTER_CONTACT\");\n\nexport { addContact, removeContact, filterContact };\n","import React from \"react\";\nimport Contact from \"./Contact\";\n// import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport { removeContact } from \"../../redux/phonebook/contacts.actions\";\n\nconst ContactList = ({ contacts, removeContact }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map((contact) => (\n        <li className={styles.item} key={contact.id}>\n          <Contact\n            contact={contact}\n            onRemoveContact={() => removeContact(contact.id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.array.isRequired,\n//   onRemoveContact: PropTypes.func.isRequired,\n// };\n\nconst getFilteredContacts = (allcContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allcContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { contacts, filter } = state;\n  const filteredContacts = getFilteredContacts(contacts, filter);\n  return {\n    contacts: filteredContacts,\n  };\n};\n\nexport default connect(mapStateToProps, { removeContact })(ContactList);\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport { filterContact } from \"../../redux/phonebook/contacts.actions\";\n\nconst Filter = ({ value, filterContact }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={(event) => filterContact(event.target.value)}\n      />\n    </label>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChangeFilter: PropTypes.func.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  value: state.filter,\n});\n\nexport default connect(mapStateToProps, { filterContact })(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactsList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport styles from \"./App.module.css\";\nimport { connect } from \"react-redux\";\nimport { addContact, removeContact } from \"../redux/phonebook/contacts.actions\";\n\nclass App extends Component {\n  createContact = ({ name, number }) => {\n    // const sameName = this.state.contacts.some(\n    //   (contact) => contact.name === name || contact.number === number\n    // );\n    // if (sameName) {\n    //   alert(`This contact is already exists`);\n    // } else if (name.length === 0 || number.length === 0) {\n    //   alert(`Fill in all the fields`);\n    // } else {\n    //   const contact = {\n    //     id: shortid.generate(),\n    //     name,\n    //     number,\n    //   };\n    // }\n    this.props.addContact({ name, number });\n  };\n\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(contacts);\n\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.createContact} />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList\n          contacts={this.props.contacts}\n          removeContact={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\n\nconst mapDispatchToProps = { addContact, removeContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, removeContact, filterContact } from \"./contacts.actions\";\n\nconst contacts = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [removeContact]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContact]: (_, action) => action.payload,\n});\n\nexport { contacts, filter };\n","import { combineReducers } from \"redux\";\nimport { contacts, filter } from \"./contacts.reducers\";\n\nconst rootReducer = combineReducers({\n  contacts,\n  filter,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./phonebook/rootReducer\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"label\":\"ContactForm_label__3cSwc\",\"input\":\"ContactForm_input__2u7Lv\",\"btn\":\"ContactForm_btn__2Kwxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__GcKYx\",\"item\":\"ContactList_item__2EgDX\",\"btn\":\"ContactList_btn__1_Zi4\"};"],"sourceRoot":""}